<?xml version="1.0" encoding="UTF-8"?>
<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="Command injection"/>
    <language value="php"/>
    <match mode="function-param-controllable"><![CDATA[(system|passthru|exec|pcntl_exec|shell_exec|popen|proc_open|ob_start|expect_popen|mb_send_mail|w32api_register_function|w32api_invoke_function|ssh2_exec)]]></match>
    <repair block="in-function"><![CDATA[(escapeshellcmd|escapeshellarg)]]></repair>
    <level value="10"/>
    <test>
        <case assert="true"><![CDATA[system($_GET['pass']);]]></case>
        <case assert="true"><![CDATA[passthru($_GET['pass']);]]></case>
        <case assert="true"><![CDATA[exec($_GET['pass1'],$_GET['pass2']);]]></case>
        <case assert="true"><![CDATA[pcntl_exec('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[shell_exec('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[popen('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[proc_open('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[ob_start('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[expect_popen('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[ssh2_exec($connection, '$_GET['pass']');]]></case>
    </test>
    <solution>
        Command injection - Santize user input if you are going to use that.
        Evade use that kind of function if this is possible.
        ```
        <?php
            $ip=$_GET['ip'];
            system("ping"+$ip);
        ?>
        ```
        构造 `http://www.test.com/test.php?ip=127.0.0.1|ifconfig` 即会发生命令注入攻击

        正确代码示例
        ```php
        <?php
            $command = './configure '.$_POST['configure_options'];// 允许任意数量的参数
            $escaped_command = escapeshellcmd($command);
            system($escaped_command);
        ?>
        ```
    </solution>
    <status value="on"/>
    <author name="Feei" email="feei@feei.cn"/>
</cobra>